{"ast":null,"code":"\"use strict\";\n\nvar os = require(\"os\");\n/**\n * localIpAddress\n * Get the machine IP on the local network.\n *\n * @name localIpAddress\n * @function\n * @return {String} The local ip address as a string.\n */\n\n\nmodule.exports = function localIpAddress() {\n  var interfaces = Object.values(os.networkInterfaces());\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = interfaces[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var iface = _step.value;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = iface[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var alias = _step2.value;\n\n          if (alias.family === \"IPv4\" && alias.address !== \"127.0.0.1\" && !alias.internal) {\n            return alias.address;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return \"0.0.0.0\";\n};","map":null,"metadata":{},"sourceType":"script"}